# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/pisces',
                'doc_host': 'https://Arcascope.github.io',
                'git_url': 'https://github.com/Arcascope/pisces',
                'lib_path': 'pisces'},
  'syms': { 'pisces.enums': { 'pisces.enums.KnownFeatures': ('enums.html#knownfeatures', 'pisces/enums.py'),
                              'pisces.enums.KnownFeatures.base_feature': ('enums.html#knownfeatures.base_feature', 'pisces/enums.py'),
                              'pisces.enums.KnownFeatures.is_accelerometer_based': ( 'enums.html#knownfeatures.is_accelerometer_based',
                                                                                     'pisces/enums.py'),
                              'pisces.enums.KnownFeatures.is_activity_based': ( 'enums.html#knownfeatures.is_activity_based',
                                                                                'pisces/enums.py'),
                              'pisces.enums.KnownFeatures.is_derived': ('enums.html#knownfeatures.is_derived', 'pisces/enums.py'),
                              'pisces.enums.KnownFeatures.is_heartrate_based': ( 'enums.html#knownfeatures.is_heartrate_based',
                                                                                 'pisces/enums.py'),
                              'pisces.enums.KnownFeatures.is_spectral': ('enums.html#knownfeatures.is_spectral', 'pisces/enums.py'),
                              'pisces.enums.KnownModel': ('enums.html#knownmodel', 'pisces/enums.py'),
                              'pisces.enums.KnownModel.__str__': ('enums.html#knownmodel.__str__', 'pisces/enums.py'),
                              'pisces.enums.SleepClassificationProblem': ('enums.html#sleepclassificationproblem', 'pisces/enums.py'),
                              'pisces.enums.SleepClassificationProblem.type_enum': ( 'enums.html#sleepclassificationproblem.type_enum',
                                                                                     'pisces/enums.py'),
                              'pisces.enums.SleepOrWake': ('enums.html#sleeporwake', 'pisces/enums.py'),
                              'pisces.enums.SleepStages': ('enums.html#sleepstages', 'pisces/enums.py'),
                              'pisces.enums.SleepStages.to_WLDR': ('enums.html#sleepstages.to_wldr', 'pisces/enums.py'),
                              'pisces.enums.SleepStages.to_masked_sleep_wake': ( 'enums.html#sleepstages.to_masked_sleep_wake',
                                                                                 'pisces/enums.py'),
                              'pisces.enums.SleepStagesWLDR': ('enums.html#sleepstageswldr', 'pisces/enums.py'),
                              'pisces.enums.SleepStagesWLDR.to_masked_sleep_wake': ( 'enums.html#sleepstageswldr.to_masked_sleep_wake',
                                                                                     'pisces/enums.py')},
            'pisces.evaluations': {},
            'pisces.loader': { 'pisces.loader.DataPool': ('loader.html#datapool', 'pisces/loader.py'),
                               'pisces.loader.DataPool.__getstate__': ('loader.html#datapool.__getstate__', 'pisces/loader.py'),
                               'pisces.loader.DataPool.__init__': ('loader.html#datapool.__init__', 'pisces/loader.py'),
                               'pisces.loader.DataPool.__len__': ('loader.html#datapool.__len__', 'pisces/loader.py'),
                               'pisces.loader.DataPool.__str__': ('loader.html#datapool.__str__', 'pisces/loader.py'),
                               'pisces.loader.DataPool._align_times_by_index': ( 'loader.html#datapool._align_times_by_index',
                                                                                 'pisces/loader.py'),
                               'pisces.loader.DataPool.align_subject_versions': ( 'loader.html#datapool.align_subject_versions',
                                                                                  'pisces/loader.py'),
                               'pisces.loader.DataPool.get_record': ('loader.html#datapool.get_record', 'pisces/loader.py'),
                               'pisces.loader.DataPool.load': ('loader.html#datapool.load', 'pisces/loader.py'),
                               'pisces.loader.DataPool.tidy': ('loader.html#datapool.tidy', 'pisces/loader.py'),
                               'pisces.loader.DataRecord': ('loader.html#datarecord', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.__getstate__': ('loader.html#datarecord.__getstate__', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.__init__': ('loader.html#datarecord.__init__', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.__str__': ('loader.html#datarecord.__str__', 'pisces/loader.py'),
                               'pisces.loader.DataRecord._feature_select': ('loader.html#datarecord._feature_select', 'pisces/loader.py'),
                               'pisces.loader.DataRecord._load_accel': ('loader.html#datarecord._load_accel', 'pisces/loader.py'),
                               'pisces.loader.DataRecord._load_activity': ('loader.html#datarecord._load_activity', 'pisces/loader.py'),
                               'pisces.loader.DataRecord._load_heartrate': ('loader.html#datarecord._load_heartrate', 'pisces/loader.py'),
                               'pisces.loader.DataRecord._load_psg': ('loader.html#datarecord._load_psg', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.absolute_accelerometer_path': ( 'loader.html#datarecord.absolute_accelerometer_path',
                                                                                         'pisces/loader.py'),
                               'pisces.loader.DataRecord.acceleration_data': ( 'loader.html#datarecord.acceleration_data',
                                                                               'pisces/loader.py'),
                               'pisces.loader.DataRecord.activity_count_data': ( 'loader.html#datarecord.activity_count_data',
                                                                                 'pisces/loader.py'),
                               'pisces.loader.DataRecord.bin_to_psg': ('loader.html#datarecord.bin_to_psg', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.data_set_name': ('loader.html#datarecord.data_set_name', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.fill_gaps': ('loader.html#datarecord.fill_gaps', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.heartrate_data': ('loader.html#datarecord.heartrate_data', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.load_data': ('loader.html#datarecord.load_data', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.max_time': ('loader.html#datarecord.max_time', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.min_time': ('loader.html#datarecord.min_time', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.psg_data': ('loader.html#datarecord.psg_data', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.samples': ('loader.html#datarecord.samples', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.subject_id': ('loader.html#datarecord.subject_id', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.tidy': ('loader.html#datarecord.tidy', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.times': ('loader.html#datarecord.times', 'pisces/loader.py'),
                               'pisces.loader.DataRecord.trim': ('loader.html#datarecord.trim', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison': ('loader.html#databaseliaison', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison.__init__': ('loader.html#databaseliaison.__init__', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison.add': ('loader.html#databaseliaison.add', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison.add_all': ('loader.html#databaseliaison.add_all', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison.select': ('loader.html#databaseliaison.select', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison.to_csv': ('loader.html#databaseliaison.to_csv', 'pisces/loader.py'),
                               'pisces.loader.DatabaseLiaison.to_csvDictWriterDicts': ( 'loader.html#databaseliaison.to_csvdictwriterdicts',
                                                                                        'pisces/loader.py'),
                               'pisces.loader.StudyRecord': ('loader.html#studyrecord', 'pisces/loader.py'),
                               'pisces.loader.StudyRecord.__repr__': ('loader.html#studyrecord.__repr__', 'pisces/loader.py')},
            'pisces.records': { 'pisces.records.AccelerometerRecord': ('records.html#accelerometerrecord', 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.__post_init__': ( 'records.html#accelerometerrecord.__post_init__',
                                                                                      'pisces/records.py'),
                                'pisces.records.AccelerometerRecord._expected_xyz_shape': ( 'records.html#accelerometerrecord._expected_xyz_shape',
                                                                                            'pisces/records.py'),
                                'pisces.records.AccelerometerRecord._fill_gaps_specific_data': ( 'records.html#accelerometerrecord._fill_gaps_specific_data',
                                                                                                 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.bin_based_on': ( 'records.html#accelerometerrecord.bin_based_on',
                                                                                     'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.l2_norm': ( 'records.html#accelerometerrecord.l2_norm',
                                                                                'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.resample': ( 'records.html#accelerometerrecord.resample',
                                                                                 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.trim': ('records.html#accelerometerrecord.trim', 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.txyz': ('records.html#accelerometerrecord.txyz', 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.x': ('records.html#accelerometerrecord.x', 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.xyz': ('records.html#accelerometerrecord.xyz', 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.y': ('records.html#accelerometerrecord.y', 'pisces/records.py'),
                                'pisces.records.AccelerometerRecord.z': ('records.html#accelerometerrecord.z', 'pisces/records.py'),
                                'pisces.records.ActivityCountRecord': ('records.html#activitycountrecord', 'pisces/records.py'),
                                'pisces.records.ActivityCountRecord._fill_gaps_specific_data': ( 'records.html#activitycountrecord._fill_gaps_specific_data',
                                                                                                 'pisces/records.py'),
                                'pisces.records.ActivityCountRecord.bin_based_on': ( 'records.html#activitycountrecord.bin_based_on',
                                                                                     'pisces/records.py'),
                                'pisces.records.ActivityCountRecord.trim': ('records.html#activitycountrecord.trim', 'pisces/records.py'),
                                'pisces.records.HeartRateRecord': ('records.html#heartraterecord', 'pisces/records.py'),
                                'pisces.records.HeartRateRecord._fill_gaps_specific_data': ( 'records.html#heartraterecord._fill_gaps_specific_data',
                                                                                             'pisces/records.py'),
                                'pisces.records.HeartRateRecord._trim_specific_data': ( 'records.html#heartraterecord._trim_specific_data',
                                                                                        'pisces/records.py'),
                                'pisces.records.HeartRateRecord.bin_based_on': ( 'records.html#heartraterecord.bin_based_on',
                                                                                 'pisces/records.py'),
                                'pisces.records.PSGModelOutputs': ('records.html#psgmodeloutputs', 'pisces/records.py'),
                                'pisces.records.PSGModelOutputs.__post_init__': ( 'records.html#psgmodeloutputs.__post_init__',
                                                                                  'pisces/records.py'),
                                'pisces.records.PSGModelOutputs._sort_specific_data': ( 'records.html#psgmodeloutputs._sort_specific_data',
                                                                                        'pisces/records.py'),
                                'pisces.records.PSGModelOutputs._trim_specific_data': ( 'records.html#psgmodeloutputs._trim_specific_data',
                                                                                        'pisces/records.py'),
                                'pisces.records.PSGPredictionsNotProbabilityVectorError': ( 'records.html#psgpredictionsnotprobabilityvectorerror',
                                                                                            'pisces/records.py'),
                                'pisces.records.PSGPredictionsNotProbabilityVectorError.__init__': ( 'records.html#psgpredictionsnotprobabilityvectorerror.__init__',
                                                                                                     'pisces/records.py'),
                                'pisces.records.PSGPredictionsShapeError': ('records.html#psgpredictionsshapeerror', 'pisces/records.py'),
                                'pisces.records.PSGPredictionsShapeError.__init__': ( 'records.html#psgpredictionsshapeerror.__init__',
                                                                                      'pisces/records.py'),
                                'pisces.records.PSGRecord': ('records.html#psgrecord', 'pisces/records.py'),
                                'pisces.records.PSGRecord.__len__': ('records.html#psgrecord.__len__', 'pisces/records.py'),
                                'pisces.records.PSGRecord.__post_init__': ('records.html#psgrecord.__post_init__', 'pisces/records.py'),
                                'pisces.records.PSGRecord._fill_gaps_specific_data': ( 'records.html#psgrecord._fill_gaps_specific_data',
                                                                                       'pisces/records.py'),
                                'pisces.records.PSGRecord._sort_specific_data': ( 'records.html#psgrecord._sort_specific_data',
                                                                                  'pisces/records.py'),
                                'pisces.records.PSGRecord._trim_specific_data': ( 'records.html#psgrecord._trim_specific_data',
                                                                                  'pisces/records.py'),
                                'pisces.records.PSGRecord.bin_based_on': ('records.html#psgrecord.bin_based_on', 'pisces/records.py'),
                                'pisces.records.PSGRecord.labels': ('records.html#psgrecord.labels', 'pisces/records.py'),
                                'pisces.records.PSGRecord.sw_labels': ('records.html#psgrecord.sw_labels', 'pisces/records.py'),
                                'pisces.records.PSGRecord.to_sleep_wake': ('records.html#psgrecord.to_sleep_wake', 'pisces/records.py'),
                                'pisces.records.PSGSleepWakePredictions': ('records.html#psgsleepwakepredictions', 'pisces/records.py'),
                                'pisces.records.PSGSleepWakePredictions.__post_init__': ( 'records.html#psgsleepwakepredictions.__post_init__',
                                                                                          'pisces/records.py'),
                                'pisces.records.PSGSleepWakeRecord': ('records.html#psgsleepwakerecord', 'pisces/records.py'),
                                'pisces.records.PSGSleepWakeRecord.__len__': ( 'records.html#psgsleepwakerecord.__len__',
                                                                               'pisces/records.py'),
                                'pisces.records.PSGSleepWakeRecord.from_predictions': ( 'records.html#psgsleepwakerecord.from_predictions',
                                                                                        'pisces/records.py'),
                                'pisces.records.PSGSleepWakeRecord.from_staging_predictions': ( 'records.html#psgsleepwakerecord.from_staging_predictions',
                                                                                                'pisces/records.py'),
                                'pisces.records.PSGSleepWakeRecord.to_sleep_wake': ( 'records.html#psgsleepwakerecord.to_sleep_wake',
                                                                                     'pisces/records.py'),
                                'pisces.records.PSGStagingPredictions': ('records.html#psgstagingpredictions', 'pisces/records.py'),
                                'pisces.records.PSGStagingPredictions.__post_init__': ( 'records.html#psgstagingpredictions.__post_init__',
                                                                                        'pisces/records.py'),
                                'pisces.records.PSGStagingPredictions.to_sleep_wake_predictions': ( 'records.html#psgstagingpredictions.to_sleep_wake_predictions',
                                                                                                    'pisces/records.py'),
                                'pisces.records.PSGStagingRecord': ('records.html#psgstagingrecord', 'pisces/records.py'),
                                'pisces.records.PSGStagingRecord.__post_init__': ( 'records.html#psgstagingrecord.__post_init__',
                                                                                   'pisces/records.py'),
                                'pisces.records.PSGStagingRecord.one_hot': ('records.html#psgstagingrecord.one_hot', 'pisces/records.py'),
                                'pisces.records.PSGStagingRecord.to_WLDR': ('records.html#psgstagingrecord.to_wldr', 'pisces/records.py'),
                                'pisces.records.PSGStagingRecord.to_sleep_wake': ( 'records.html#psgstagingrecord.to_sleep_wake',
                                                                                   'pisces/records.py'),
                                'pisces.records.PSGStagingWLDRRecord': ('records.html#psgstagingwldrrecord', 'pisces/records.py'),
                                'pisces.records.PSGStagingWLDRRecord.one_hot': ( 'records.html#psgstagingwldrrecord.one_hot',
                                                                                 'pisces/records.py'),
                                'pisces.records.PSGStagingWLDRRecord.to_WLDR': ( 'records.html#psgstagingwldrrecord.to_wldr',
                                                                                 'pisces/records.py'),
                                'pisces.records.PSGStagingWLDRRecord.to_sleep_wake': ( 'records.html#psgstagingwldrrecord.to_sleep_wake',
                                                                                       'pisces/records.py'),
                                'pisces.records.TimeseriesRecording': ('records.html#timeseriesrecording', 'pisces/records.py'),
                                'pisces.records.TimeseriesRecording.__post_init__': ( 'records.html#timeseriesrecording.__post_init__',
                                                                                      'pisces/records.py'),
                                'pisces.records.TimeseriesRecording._fill_gaps_specific_data': ( 'records.html#timeseriesrecording._fill_gaps_specific_data',
                                                                                                 'pisces/records.py'),
                                'pisces.records.TimeseriesRecording._identify_gaps': ( 'records.html#timeseriesrecording._identify_gaps',
                                                                                       'pisces/records.py'),
                                'pisces.records.TimeseriesRecording._sort_specific_data': ( 'records.html#timeseriesrecording._sort_specific_data',
                                                                                            'pisces/records.py'),
                                'pisces.records.TimeseriesRecording._trim_specific_data': ( 'records.html#timeseriesrecording._trim_specific_data',
                                                                                            'pisces/records.py'),
                                'pisces.records.TimeseriesRecording._trim_time': ( 'records.html#timeseriesrecording._trim_time',
                                                                                   'pisces/records.py'),
                                'pisces.records.TimeseriesRecording.align_self_and_other_series': ( 'records.html#timeseriesrecording.align_self_and_other_series',
                                                                                                    'pisces/records.py'),
                                'pisces.records.TimeseriesRecording.bin_based_on': ( 'records.html#timeseriesrecording.bin_based_on',
                                                                                     'pisces/records.py'),
                                'pisces.records.TimeseriesRecording.fill_gaps': ( 'records.html#timeseriesrecording.fill_gaps',
                                                                                  'pisces/records.py'),
                                'pisces.records.TimeseriesRecording.sort_by_time': ( 'records.html#timeseriesrecording.sort_by_time',
                                                                                     'pisces/records.py'),
                                'pisces.records.TimeseriesRecording.trim': ('records.html#timeseriesrecording.trim', 'pisces/records.py')},
            'pisces.utils': { 'pisces.utils.determine_header_rows_and_delimiter': ( 'utils.html#determine_header_rows_and_delimiter',
                                                                                    'pisces/utils.py')}}}
