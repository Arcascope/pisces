# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/09_pipelines.ipynb.

# %% auto 0
__all__ = ['ValidationConfiguration', 'DatabaseConfiguration', 'PipelineConfiguration']

# %% ../nbs/09_pipelines.ipynb 4
from dataclasses import dataclass
from typing import List, Optional

from pisces.enums import ValidationMethod


@dataclass
class ValidationConfiguration:
    parameter: Optional[float | int | str]
    method: ValidationMethod

    def __init__(self, parameter: Optional[float | int | str], method: str):
        self.parameter = parameter
        self.method = ValidationMethod[method]

    def make_splits(self, records: List[DataRecord]):
        return self.method.make_splits(self.parameter, records)


@dataclass
class DatabaseConfiguration:
    data_set_csv: str
    database: str = ":memory:"
    # SQL formatted, for WHERE clause
    # eg: if selector = "data_set_name = 'sleep_accel'" then we select only sleep_accel records from teh database
    #   as the output of """SELECT * FROM data_sets WHERE data_set_name = 'sleep_accel'"""
    selector: str = ""


@dataclass
class PipelineConfiguration:
    data_config: DatabaseConfiguration
    validation: ValidationConfiguration
    models: List[KnownModel]
    features: List[KnownFeatures]
    split_models_saveto: str

    def __init__(
        self,
        data_config: Dict[str, str],
        validation: Dict[str, str],
        models: List[str],
        features: List[str],
        split_models_saveto: str = "",
    ):
        self.data_config = DatabaseConfiguration(**data_config)
        self.validation = ValidationConfiguration(**validation)
        self.models = [KnownModel[mod] for mod in models]
        self.features = [KnownFeatures[ft] for ft in features]
        # self.feature_config = feature_config
        self.split_models_saveto = split_models_saveto

